prompt example: "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do \n\nPick up a block \nUnstack a block from on top of another block \nPut down a block \nStack a block on top of another block \n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time. \nI can only pick up or unstack a block if my hand is empty. \nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up. \nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block. \nI can only unstack a block from on top of another block if the block I am unstacking is clear. Once I pick up or unstack a block, I am holding the block. \nI can only put down a block that I am holding. \nI can only stack a block on top of another block if I am holding the block being stacked. \nI can only stack a block on top of another block if the block onto which I am stacking the block is clear. Once I put down or stack a block, my hand becomes empty.\n\nAfter being given a goal and a state, check if the goal is achieved in the state. Say \"Achieved\" if the goal appears in the state. Say \"Not achieved\" if the goal does not appears in the state.\n[SCENARIO 1]\n[GOAL]My goal is to have that the orange block is on top of the blue block.\n[STATE]I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\n[GOAL STATUS]Not achieved.\n[SCENARIO 2]\n[GOAL]My goal is to have that the orange block is on top of the red block.\n[STATE]I have that, the orange block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the blue block, the orange block is on top of the red block, the blue block is on the table and the red block is on the table.\n[GOAL STATUS]Achieved.\n[SCENARIO 3]\n[GOAL]My goal is to have that the yellow block is on top of the red block.\n[STATE]I have that, the orange block is clear, the white block is clear, the yellow block is in the hand, the hand is holding the yellow block, the orange block is on top of the blue block, the white block is on top of the red block, the blue block is on the table, and the red block is on the table.\n[GOAL STATUS]Not achieved."

prompt engineering log: If we leave the [GOAL STATUS] to be empty for [SCENARIO 3] (from 0053), then we can have the right answer "Not achieved" with Vicuna-7B.

prompt example: "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do \n\nPick up a block \nUnstack a block from on top of another block \nPut down a block \nStack a block on top of another block \n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time. \nI can only pick up or unstack a block if my hand is empty. \nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up. \nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block. \nI can only unstack a block from on top of another block if the block I am unstacking is clear. Once I pick up or unstack a block, I am holding the block. \nI can only put down a block that I am holding. \nI can only stack a block on top of another block if I am holding the block being stacked. \nI can only stack a block on top of another block if the block onto which I am stacking the block is clear. Once I put down or stack a block, my hand becomes empty.\n\nAfter being given a goal and a state, check if the goal is achieved in the state. Say \"Achieved\" if the goal appears in the state. Say \"Not achieved\" if the goal does not appears in the state.\n[SCENARIO 1]\n[GOAL]My goal is to have that the orange block is on top of the blue block.\n[STATE]I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\n[GOAL STATUS]Not achieved.\n[SCENARIO 2]\n[GOAL]My goal is to have that the orange block is on top of the red block.\n[STATE]I have that, the orange block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the blue block, the orange block is on top of the red block, the blue block is on the table and the red block is on the table.\n[GOAL STATUS]Achieved.\n[SCENARIO 3]\n[GOAL]My goal is to have that the white block is on top of the black block.\n[STATE]I have that, the black block is clear, the yellow block is clear, the hand is empty, the white block is on top of the green block, the black block is on the table, the yellow block is on the table and the green block is on the table.\n[GOAL STATUS]Not achieved."

prompt engineering log: If we leave the [GOAL STATUS] to be empty for [SCENARIO 3] (from instance-56.pddl, step6.json), then we can have the right answer "Not achieved" with Vicuna-7B.

prompt example: "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do \n\nPick up a block \nUnstack a block from on top of another block \nPut down a block \nStack a block on top of another block \n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time. \nI can only pick up or unstack a block if my hand is empty. \nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up. \nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block. \nI can only unstack a block from on top of another block if the block I am unstacking is clear. Once I pick up or unstack a block, I am holding the block. \nI can only put down a block that I am holding. \nI can only stack a block on top of another block if I am holding the block being stacked. \nI can only stack a block on top of another block if the block onto which I am stacking the block is clear. Once I put down or stack a block, my hand becomes empty.\n\nAfter being given a goal and a state, check if the goal is achieved in the state. Say \"Achieved\" if the goal appears in the state. Say \"Not achieved\" if the goal does not appears in the state.\n[SCENARIO 1]\n[GOAL]My goal is to have that the orange block is on top of the blue block.\n[STATE]I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\n[GOAL STATUS]Not achieved.\n[SCENARIO 2]\n[GOAL]My goal is to have that the orange block is on top of the red block.\n[STATE]I have that, the orange block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the blue block, the orange block is on top of the red block, the blue block is on the table and the red block is on the table.\n[GOAL STATUS]Achieved.\n[SCENARIO 3]\n[GOAL]My goal is to have that the white block is on top of the black block.\n[STATE]I have that, the white block is clear, the yellow block is clear, the green block is in the hand, the hand is holding the green block, the white block is on top of the black block, the black block is on the table and the yellow block is on the table.\n[GOAL STATUS]Achieved."

prompt engineering log: If we leave the [GOAL STATUS] to be empty for [SCENARIO 3] (from instance-56.pddl, step6.json), then we always have the wrong answer whenever we use Vicuna-7B, Vicuna-13B or Vicuna-33B. We should improve our prompt. Refer to https://www.promptingguide.ai/introduction/examples#information-extraction. Check the question answering part. I have two ideas:
1. I think we should add repeating question sentence: is the goal satisfied in the state? We should repeat this because of the property of transformer: if we put the question far away from the completion point, then the the question itself has minor effect on the output and the output might be dominated by the previous non-relevant example. Go to final_goal_est1.txt.
2. I think we should add some explanation to the example.